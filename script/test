#!/bin/bash
###############################################################################
# Copyright (C) Intel Corporation
#
# SPDX-License-Identifier: MIT
###############################################################################
# Run basic tests on base.

set -o errexit


SCRIPT_DIR="$( cd "$(dirname "${BASH_SOURCE[0]:-$0}")" >/dev/null 2>&1 ; pwd -P )"

# Read command line options
. "${SCRIPT_DIR}/_buildopts.sh" \
    --name test \
    --desc "Run basic tests on base." \
    -- "$@"

result_all=0

if [ ! -e "${VPL_BUILD_DEPENDENCIES}" ]; then
    echo "VPL_BUILD_DEPENDENCIES not defined. Did you run bootstrap?"
    exit 1
fi

# Load project environment
if [ -z "${VPL_ROOT}" ]; then
  echo "Environment script appears not to have been run."
  echo "Attempting to run now..."

  if [ ! -e "${VPL_INSTALL_DIR}" ]
  then
    echo "Project must be installed to test implementation"
    exit 1
  fi

  if [ ! -e "${VPL_INSTALL_DIR}/env/vars.sh" ]
  then
    # Detect case where user points VPL_INSTALL_DIR at the
    # Base repo instead of the built output.
    echo "Cannot find environment script in ${VPL_INSTALL_DIR}/env"
    exit 1
  fi

  source "${VPL_INSTALL_DIR}/env/vars.sh"
else
  echo "Environment script appears to have already run. Continuing..."
fi

result_all=0

pushd "${PROJ_DIR}"
  . test/tools/env/vars.sh
  export ffmpeg_dir="${VPL_BUILD_DEPENDENCIES}/bin"
  export PATH=${ffmpeg_dir}:${PATH}

  BUILD_DIR=_build
  pushd "${BUILD_DIR}"
    export LD_LIBRARY_PATH=${PWD}:${LD_LIBRARY_PATH}
    echo "--- Running Unit Tests ---"
    # using " || ret=$?" to allow fail and capture exit code with errexit set
    ./vpl-utest "--gtest_output=xml:${PROJ_DIR}/_logs/" || ret=$?
    if [ ${ret} -ne 0 ]; then
        echo "--- Unit Tests FAILED ---"
        (( result_all++ )) || true
    else
        echo "--- Unit Tests PASSED ---"
    fi
  popd
popd

exit "${result_all}"
