#!/bin/bash
###############################################################################
# Copyright (C) 2020 Intel Corporation
#
# SPDX-License-Identifier: MIT
###############################################################################
## start of boilerplate to switch to project root ------------------------------
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
proj_dir="$( dirname "${script_dir}" )"
cd ${proj_dir}
set -o errexit
## start of commands -----------------------------------------------------------
source ${proj_dir}/test/tools/env/vars.sh
if [ -n "$VPL_BUILD_DEPENDENCIES" ]; then
    export ffmpeg_dir=${VPL_BUILD_DEPENDENCIES}/bin
else
    echo "VPL_BUILD_DEPENDENCIES not defined. Did you run bootstrap?"
    exit 1
fi
export PATH=${ffmpeg_dir}:${PATH}

if [ -n "$VPL_INSTALL_DIR" ]; then
  if [ -z "$VPL_ROOT" ]; then
    source "$VPL_INSTALL_DIR/env/vars.sh"
  fi
fi

cd _build
export LD_LIBRARY_PATH=$PWD:$LD_LIBRARY_PATH
result_all=0

echo --- Running Unit Tests ---
./vpl-utest --gtest_output=xml:${proj_dir}/_logs/
ret=$?
if [ $ret -ne 0 ]; then
    echo --- Unit Tests FAILED ---
    let result_all++
else
    echo --- Unit Tests PASSED ---
fi

echo --- Running Decode Smoke Test ---
sample_decode h265 -i ${proj_dir}/test/content/cars_128x96.h265 \
                -o out_vpl_h265.i420 -vpl
$VPL_BUILD_DEPENDENCIES/bin/ffmpeg -y \
                                   -i ${proj_dir}/test/content/cars_128x96.h265\
                                   -f rawvideo -pixel_format yuv420p \
                                   out_ref_h265.i420
$VPL_BUILD_DEPENDENCIES/bin/ffmpeg -y \
                                   -r 30 -video_size 128x96 -pixel_format yuv420p \
                                   -f rawvideo -i out_vpl_h265.i420 \
                                   -r 30 -video_size 128x96 -pixel_format yuv420p \
                                   -f rawvideo -i out_ref_h265.i420 \
                                   -filter_complex psnr= -f null nullsink
python3 $PYTHONPATH/check_content/check_smoke_output.py \
        out_ref_h265.i420 out_vpl_h265.i420 I420 128x96@30

ret=$?
if [ $ret -ne 0 ]; then
    echo --- Decode Smoke Test FAILED ---
    let result_all++
else
    echo --- Decode Smoke Test PASSED ---
fi

echo --- Running Encode Smoke Test ---
sample_encode h265 -i out_ref_h265.i420 -o out_vpl.h265 -w 128 -h 96 -vpl
sample_decode h265 -i out_vpl.h265 -o out_vpl_dec_h265.i420 -vpl
$VPL_BUILD_DEPENDENCIES/bin/ffmpeg -y \
                                   -r 30 -video_size 128x96 -pixel_format yuv420p \
                                   -f rawvideo -i out_ref_h265.i420 \
                                   -r 30 -video_size 128x96 -pixel_format yuv420p \
                                   -f rawvideo -i out_vpl_dec_h265.i420 \
                                   -filter_complex psnr= -f null nullsink
python3 $PYTHONPATH/check_content/check_smoke_output.py \
        out_ref_h265.i420 out_vpl_dec_h265.i420 I420 128x96@30

ret=$?
if [ $ret -ne 0 ]; then
    echo --- Encode Smoke Test FAILED ---
    let result_all++
else
    echo --- Encode Smoke Test PASSED ---
fi

echo --- Running VPP Smoke Test ---
sample_vpp -sw 128 -sh 96 -scrX 0 -scrY 0 -scrW 96 -scrH 48 -scc i420 \
             -dw 352 -dh 288 -dcrX 50 -dcrY 50 -dcrW 100 -dcrH 100 -dcc i010 \
             -i out_ref_h265.i420 \
             -o out_vpl_vpp.i010 \
             -lib vpl

VPP_FILTER="split=2[bg][main];\
            [bg]scale=352:288,drawbox=x=0:y=0:w=352:h=288:t=fill[bg2];\
            [main]crop=96:48:0:0,scale=100:100[ovr];\
            [bg2][ovr]overlay=50:50,format=pix_fmts=yuv420p10le"

$VPL_BUILD_DEPENDENCIES/bin/ffmpeg -y \
            -f rawvideo -pixel_format yuv420p -video_size 128x96 \
            -i out_ref_h265.i420 \
            -filter_complex "$VPP_FILTER" \
            -f rawvideo -pixel_format yuv420p10le -video_size 352x288 \
            out_ref_vpp.i010
$VPL_BUILD_DEPENDENCIES/bin/ffmpeg -y \
            -r 30 -video_size 352x288 -pixel_format yuv420p10le \
            -f rawvideo -i out_ref_vpp.i010 \
            -r 30 -video_size 352x288 -pixel_format yuv420p10le \
            -f rawvideo -i out_vpl_vpp.i010 \
            -filter_complex psnr= -f null nullsink
python3 $PYTHONPATH/check_content/check_smoke_output.py \
        out_ref_vpp.i010 out_vpl_vpp.i010 I010 352x288@30

ret=$?
if [ $ret -ne 0 ]; then
    echo --- VPP Smoke Test FAILED ---
    let result_all++
else
    echo --- VPP Smoke Test PASSED ---
fi

echo --- Running Pipeline \(Decode + VPP\) Smoke Test --- 
vpl-decvpp ${proj_dir}/test/content/cars_128x96.h265

$VPL_BUILD_DEPENDENCIES/bin/ffmpeg -y \
            -i ${proj_dir}/test/content/cars_128x96.h265\
            -filter_complex "scale=640:480" \
            -f rawvideo -pixel_format yuv420p -video_size 640x480 \
            out_ref.i420 

python3 $PYTHONPATH/check_content/check_smoke_output.py \
        out.i420 out_ref.i420 I420 640x480@30

ret=$?
if [ $ret -ne 0 ]; then
    echo --- Pipeline \(Decode + VPP\) Smoke Test FAILED ---
    let result_all++
else
    echo --- Pipeline \(Decode + VPP\) Smoke Test PASSED ---
fi

echo --- Running Pipeline \(VPP + Encode\) Smoke Test ---
vpl-vppenc -i out_ref_h265.i420 -if i420 -o out.h265 -of h265 -sw 128 -sh 96 -dw 640 -dh 480

$VPL_BUILD_DEPENDENCIES/bin/ffmpeg -y \
            -f rawvideo -pixel_format yuv420p -video_size 128x96 \
            -i out_ref_h265.i420 \
            -filter_complex "scale=640:480" \
            -c:v libsvt_hevc \
            -g 30 -rc 1 -preset 5 -b:v 4000*1000 \
            out_ref.h265
python3 $PYTHONPATH/check_content/check_smoke_output.py \
        out.h265 out_ref.h265 H265 640x480@30

ret=$?
if [ $ret -ne 0 ]; then
    echo --- Pipeline \(VPP + Encode\) Smoke Test FAILED ---
    let result_all++
else
    echo --- Pipeline \(VPP + Encode\) Smoke Test PASSED ---
fi

echo --- Running Pipeline \(Decode + Encode\) Smoke Test ---
vpl-decenc ${proj_dir}/test/content/cars_128x96.h265

$VPL_BUILD_DEPENDENCIES/bin/ffmpeg -y \
            -i ${proj_dir}/test/content/cars_128x96.h265\
            -c:v libsvt_hevc \
            -g 30 -rc 1 -preset 5 -b:v 4000*1000 \
            out_ref.h265

python3 $PYTHONPATH/check_content/check_smoke_output.py \
        out.h265 out_ref.h265 H265 128x96@30

ret=$?
if [ $ret -ne 0 ]; then
    echo --- Pipeline \(Decode + Encode\) Smoke Test FAILED ---
    let result_all++
else
    echo --- Pipeline \(Decode + Encode\) Smoke Test PASSED ---
fi
exit $result_all
