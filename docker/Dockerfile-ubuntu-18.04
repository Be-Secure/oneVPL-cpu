# ==============================================================================
# Copyright (C) 2018-2020 Intel Corporation
#
# SPDX-License-Identifier: MIT
# ==============================================================================

FROM ubuntu:18.04 
LABEL Description="This is the base image for the oneAPI Video Processing Library CPU Reference Implementation"
LABEL Vendor="Intel Corporation"
WORKDIR /home

# Common build tools
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Moscow
RUN apt-get update && apt-get install -y --no-install-recommends \
      software-properties-common \
      lsb-release \
      build-essential \
      pkg-config \
      git \
      cmake \
      vim \
      yasm \
      nasm \
      meson \
      ninja-build \
      python3 \
      python3-setuptools \
      python3-pip && \
    pip3 install -U wheel --user && \
    pip3 install meson && \
    rm -rf /var/lib/apt/lsits/* 

ARG INSTALL_PREFIX=/usr
ENV PKG_CONFIG_PATH=${INSTALL_PREFIX}/lib/x86_64-linux-gnu/pkgconfig:${INSTALL_PREFIX}/lib/pkgconfig:${PKG_CONFIG_PATH}


# Build SVT-HEVC
ARG SVT_HEVC_REPO=https://github.com/OpenVisualCLoud/SVT-HEVC.git
RUN git clone ${SVT_HEVC_REPO} && \
  cd SVT-HEVC && \
  git checkout v1.4.3 && \
  mkdir release && \
  cd release && \
  cmake .. -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} -DBUILD_SHARED_LIBS=off -DBUILD_APP=off \
    -DCMAKE_ASM_NASM_COMPILER=yasm && \
  cmake --build . --target install -- -j$(nproc)


# Build SVT-AV1
ARG SVT_AV1_REPO=https://github.com/OpenVisualCLoud/SVT-AV1.git
RUN git clone https://github.com/OpenVisualCloud/SVT-AV1.git && \
  cd SVT-AV1 \
## tip of master at 06112020
## this includes the fix related to link failure by common symbols (#1295)
## ffmpeg build and svt app build will fail without this fix in windows and with static lib.
  git checkout c40ee249286f182f29bab717686c300e2912adfe -b 06112020 && \
  mkdir release && \
  cd release && \
  cmake .. -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX}/ -DBUILD_SHARED_LIBS=off -DBUILD_APPS=off && \
  cmake --build . --target install -- -j$(nproc)


# Build libdav1d
ARG LIBDAV1D_REPO=https://code.videolan.org/videolan/dav1d.git 
RUN git clone ${LIBDAV1D_REPO} && \
  cd dav1d && \
  git checkout 0.7.0 && \
#  meson build --prefix ${INSTALL_PREFIX}/ --libdir ${INSTALL_PREFIX}/lib/x86_64-linux-gnu --buildtype release --default-library=static -Denable_avx512=false && \
  meson build --prefix ${INSTALL_PREFIX}/ --buildtype release --default-library=static -Denable_avx512=false && \
  ninja -C build && \
  cd build && \
  ninja install


# Build ffmpeg
RUN git clone https://github.com/FFmpeg/FFmpeg ffmpeg && \
  cd ffmpeg && \
  git checkout release/4.2 && \
  git config user.email "bootstrap@localhost" && \
  git config user.name "bootstrap" && \
  patch=0001-lavc-svt_hevc-add-libsvt-hevc-encoder-wrapper.patch && \
  git am /home/SVT-HEVC/ffmpeg_plugin/${patch} && \
  patch=0001-Add-ability-for-ffmpeg-to-run-svt-av1-with-svt-hevc.patch && \
  git am /home/SVT-AV1/ffmpeg_plugin/${patch} && \
  ./configure --disable-vaapi \
            --disable-cuda-llvm \
            --prefix=/usr \
            --disable-shared \
            --enable-static \
            --enable-pic  \
            --disable-network  \
            --disable-everything \
            --disable-doc \
            --disable-manpages  \
            --disable-hwaccels \
            --disable-appkit \
            --disable-alsa  \
            --disable-avfoundation \
            --disable-iconv \
            --disable-lzma  \
            --disable-sdl2 \
            --disable-securetransport \
            --disable-xlib  \
            --disable-zlib \
            --disable-amf \
            --disable-audiotoolbox \
            --disable-cuvid \
            --disable-d3d11va \
            --disable-dxva2 \
            --disable-nvdec  \
            --disable-nvenc \
            --disable-v4l2-m2m \
            --disable-videotoolbox  \
            --enable-indev=lavfi \
            --enable-protocol=file  \
            --enable-bsf=h264_mp4toannexb \
            --enable-bsf=hevc_mp4toannexb  \
            --enable-decoder=rawvideo \
            --enable-encoder=rawvideo \
            --enable-demuxer=rawvideo  \
            --enable-muxer=rawvideo  \
            --enable-muxer=null \
            --enable-decoder=wrapped_avframe \
            --enable-encoder=wrapped_avframe \
            --enable-muxer=h264 \
            --enable-muxer=mpeg2video \
            --enable-muxer=mjpeg  \
            --enable-muxer=hevc \
            --enable-filter=testsrc  \
            --enable-filter=testsrc2 \
            --enable-filter=rgbtestsrc  \
            --enable-filter=yuvtestsrc \
            --enable-demuxer=h264  \
            --enable-parser=h264 \
            --enable-decoder=h264 \
            --enable-demuxer=hevc  \
            --enable-decoder=hevc \
            --enable-parser=hevc  \
            --enable-decoder=mpeg2video \
            --enable-encoder=mpeg2video  \
            --enable-decoder=mjpeg \
            --enable-encoder=mjpeg  \
            --enable-filter=scale \
            --enable-filter=psnr \
            --enable-filter=ssim \
            --enable-libsvthevc \
            --enable-encoder=libsvt_hevc \
            --enable-parser=av1 \
            --enable-libsvtav1 \
            --enable-encoder=libsvt_av1 \
            --enable-libdav1d \
            --enable-decoder=libdav1d && \
  make -j $(nproc) && \
  make install


# Fixme: VPL is not currently using pkg-config: make logical links where VPL expects the libraries to be
ENV VPL_BUILD_DEPENDENCIES=${INSTALL_PREFIX}
RUN \
  ln -s /usr/lib/x86_64-linux-gnu/libSvtHevcEnc.a /usr/lib/libSvtHevcEnc.a && \
  ln -s /usr/lib/x86_64-linux-gnu/libSvtAv1Enc.a /usr/lib/libSvtAv1Enc.a && \
  ln -s /usr/lib/x86_64-linux-gnu/libdav1d.a /usr/lib/libdav1d.a 



